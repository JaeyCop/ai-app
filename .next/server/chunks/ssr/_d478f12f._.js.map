{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspace/ai-app/components/LoadingSpinner.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nexport default function LoadingSpinner() {\r\n  return (\r\n    <div className=\"flex justify-center items-center\">\r\n      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-ai-green\"></div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;;;;;;;;;;AAGrB","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///workspace/ai-app/components/ContentDisplay.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Remarkable } from 'remarkable';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\ninterface ContentDisplayProps {\r\n  content: string;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst md = new Remarkable({ html: true });\r\n\r\nfunction SEOAnalysis({ score, text }: { score: number; text: string }) {\r\n  const getScoreColor = (s: number) => {\r\n    if (s > 80) return 'text-ai-green';\r\n    if (s > 50) return 'text-ai-orange';\r\n    return 'text-ai-red';\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between py-2 border-b border-gray-700\">\r\n      <p className=\"text-sm text-gray-300\">{text}</p>\r\n      <p className={`text-sm font-bold ${getScoreColor(score)}`}>{score} / 100</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CircularProgress({ score }: { score: number }) {\r\n  const getStrokeColor = (s: number) => {\r\n    if (s > 80) return '#10B981'; // ai-green\r\n    if (s > 50) return '#F97316'; // ai-orange\r\n    return '#EF4444'; // ai-red\r\n  };\r\n\r\n  const strokeColor = getStrokeColor(score);\r\n  const circumference = 2 * Math.PI * 45;\r\n  const strokeDashoffset = circumference - (score / 100) * circumference;\r\n\r\n  return (\r\n    <div className=\"relative w-32 h-32\">\r\n      <svg className=\"w-full h-full\" viewBox=\"0 0 100 100\">\r\n        <circle className=\"text-gray-700\" strokeWidth=\"10\" stroke=\"currentColor\" fill=\"transparent\" r=\"45\" cx=\"50\" cy=\"50\" />\r\n        <circle\r\n          className=\"transition-all duration-500\"\r\n          strokeWidth=\"10\"\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={strokeDashoffset}\r\n          strokeLinecap=\"round\" // Corrected\r\n          stroke={strokeColor}\r\n          fill=\"transparent\"\r\n          r=\"45\"\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          transform=\"rotate(-90 50 50)\"\r\n        />\r\n      </svg>\r\n      <span className=\"absolute inset-0 flex items-center justify-center text-3xl font-bold\" style={{ color: strokeColor }}>\r\n        {score}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function ContentDisplay({ content, isLoading }: ContentDisplayProps) {\r\n  if (isLoading) {\r\n    return <div className=\"mt-8 flex justify-center items-center min-h-[300px]\"><LoadingSpinner /></div>;\r\n  }\r\n\r\n  if (!content) {\r\n    return <div className=\"mt-8 text-center text-gray-500 min-h-[300px] flex items-center justify-center\">Your generated content will appear here.</div>;\r\n  }\r\n\r\n  const htmlContent = md.render(content);\r\n\r\n  return (\r\n    <div className=\"mt-8 grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n      <div className=\"lg:col-span-2 bg-gray-700 p-6 rounded-lg prose prose-invert max-w-none\" dangerouslySetInnerHTML={{ __html: htmlContent }} />\r\n      <div className=\"lg:col-span-1 bg-gray-900 p-6 rounded-lg h-fit\">\r\n        <h3 className=\"text-xl font-bold text-ai-green mb-4 text-center\">SEO Score</h3>\r\n        <div className=\"flex justify-center mb-4\"><CircularProgress score={87} /></div>\r\n        <SEOAnalysis score={92} text=\"Readability\" />\r\n        <SEOAnalysis score={85} text=\"Keyword Density\" />\r\n        <SEOAnalysis score={78} text=\"Uniqueness\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAUA,MAAM,KAAK,IAAI,kJAAA,CAAA,aAAU,CAAC;IAAE,MAAM;AAAK;AAEvC,SAAS,YAAY,EAAE,KAAK,EAAE,IAAI,EAAmC;IACnE,MAAM,gBAAgB,CAAC;QACrB,IAAI,IAAI,IAAI,OAAO;QACnB,IAAI,IAAI,IAAI,OAAO;QACnB,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAE,WAAU;0BAAyB;;;;;;0BACtC,8OAAC;gBAAE,WAAW,CAAC,kBAAkB,EAAE,cAAc,QAAQ;;oBAAG;oBAAM;;;;;;;;;;;;;AAGxE;AAEA,SAAS,iBAAiB,EAAE,KAAK,EAAqB;IACpD,MAAM,iBAAiB,CAAC;QACtB,IAAI,IAAI,IAAI,OAAO,WAAW,WAAW;QACzC,IAAI,IAAI,IAAI,OAAO,WAAW,YAAY;QAC1C,OAAO,WAAW,SAAS;IAC7B;IAEA,MAAM,cAAc,eAAe;IACnC,MAAM,gBAAgB,IAAI,KAAK,EAAE,GAAG;IACpC,MAAM,mBAAmB,gBAAgB,AAAC,QAAQ,MAAO;IAEzD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;gBAAgB,SAAQ;;kCACrC,8OAAC;wBAAO,WAAU;wBAAgB,aAAY;wBAAK,QAAO;wBAAe,MAAK;wBAAc,GAAE;wBAAK,IAAG;wBAAK,IAAG;;;;;;kCAC9G,8OAAC;wBACC,WAAU;wBACV,aAAY;wBACZ,iBAAiB;wBACjB,kBAAkB;wBAClB,eAAc,QAAQ,YAAY;;wBAClC,QAAQ;wBACR,MAAK;wBACL,GAAE;wBACF,IAAG;wBACH,IAAG;wBACH,WAAU;;;;;;;;;;;;0BAGd,8OAAC;gBAAK,WAAU;gBAAuE,OAAO;oBAAE,OAAO;gBAAY;0BAChH;;;;;;;;;;;;AAIT;AAEe,SAAS,eAAe,EAAE,OAAO,EAAE,SAAS,EAAuB;IAChF,IAAI,WAAW;QACb,qBAAO,8OAAC;YAAI,WAAU;sBAAsD,cAAA,8OAAC,6HAAA,CAAA,UAAc;;;;;;;;;;IAC7F;IAEA,IAAI,CAAC,SAAS;QACZ,qBAAO,8OAAC;YAAI,WAAU;sBAAgF;;;;;;IACxG;IAEA,MAAM,cAAc,GAAG,MAAM,CAAC;IAE9B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;gBAAyE,yBAAyB;oBAAE,QAAQ;gBAAY;;;;;;0BACvI,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAmD;;;;;;kCACjE,8OAAC;wBAAI,WAAU;kCAA2B,cAAA,8OAAC;4BAAiB,OAAO;;;;;;;;;;;kCACnE,8OAAC;wBAAY,OAAO;wBAAI,MAAK;;;;;;kCAC7B,8OAAC;wBAAY,OAAO;wBAAI,MAAK;;;;;;kCAC7B,8OAAC;wBAAY,OAAO;wBAAI,MAAK;;;;;;;;;;;;;;;;;;AAIrC","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///workspace/ai-app/app/generate/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport LoadingSpinner from '@/components/LoadingSpinner';\r\nimport { useToast } from '@/context/ToastContext';\r\nimport ContentDisplay from '@/components/ContentDisplay';\r\nimport { useSearchParams } from 'next/navigation';\r\n\r\nfunction analyzeSEO(content: string, keyword: string) {\r\n  const suggestions: string[] = [];\r\n  let score = 100;\r\n\r\n  // Keyword presence\r\n  if (!keyword || !content.toLowerCase().includes(keyword.toLowerCase())) {\r\n    suggestions.push('Include your main keyword in the content.');\r\n    score -= 30;\r\n  }\r\n\r\n  // Content length\r\n  const wordCount = content.split(/\\s+/).filter(Boolean).length;\r\n  if (wordCount < 300) {\r\n    suggestions.push('Content is too short. Aim for at least 300 words.');\r\n    score -= 20;\r\n  }\r\n\r\n  // Headings\r\n  const hasH2 = /##\\s/.test(content);\r\n  if (!hasH2) {\r\n    suggestions.push('Add at least one H2 (##) subheading.');\r\n    score -= 15;\r\n  }\r\n\r\n  // Meta description (simulate)\r\n  if (content.length < 150) {\r\n    suggestions.push('Add a meta description (at least 150 characters).');\r\n    score -= 10;\r\n  }\r\n\r\n  // Readability (simulate)\r\n  if (/\\w{15,}/.test(content)) {\r\n    suggestions.push('Break up long words or sentences for better readability.');\r\n    score -= 10;\r\n  }\r\n\r\n  if (score < 0) score = 0;\r\n  return { score, suggestions };\r\n}\r\n\r\n// Add a progress bar for SEO score\r\nfunction SeoScoreBar({ score }: { score: number }) {\r\n  let color = 'bg-green-500';\r\n  if (score <= 80 && score > 50) color = 'bg-yellow-400';\r\n  if (score <= 50) color = 'bg-red-500';\r\n  return (\r\n    <div className=\"w-full bg-gray-700 rounded-full h-2 mt-2 mb-4\">\r\n      <div\r\n        className={`h-2 rounded-full transition-all duration-300 ${color}`}\r\n        style={{ width: `${score}%` }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function GeneratorPage() {\r\n  const searchParams = useSearchParams();\r\n  const initialContentType = searchParams.get('contentType') || 'BlogPost';\r\n  const [keyword, setKeyword] = useState('');\r\n  const [tone, setTone] = useState('Professional');\r\n  const [audience, setAudience] = useState('General');\r\n  const [contentType, setContentType] = useState(initialContentType);\r\n  const [content, setContent] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [seoScore, setSeoScore] = useState(100);\r\n  const [seoSuggestions, setSeoSuggestions] = useState<string[]>([]);\r\n  const [plagiarismStatus, setPlagiarismStatus] = useState<'idle' | 'checking' | 'unique' | 'plagiarized'>('idle');\r\n  const [customTemplates, setCustomTemplates] = useState<any[]>([]);\r\n  const [selectedTemplateId, setSelectedTemplateId] = useState<string>('');\r\n  const [branding, setBranding] = useState('');\r\n  const { showToast } = useToast();\r\n  const contentRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const type = searchParams.get('contentType') || 'BlogPost';\r\n    setContentType(type);\r\n  }, [searchParams]);\r\n\r\n  useEffect(() => {\r\n    if (content) {\r\n      const { score, suggestions } = analyzeSEO(content, keyword);\r\n      setSeoScore(score);\r\n      setSeoSuggestions(suggestions);\r\n    } else {\r\n      setSeoScore(100);\r\n      setSeoSuggestions([]);\r\n    }\r\n  }, [content, keyword]);\r\n\r\n  useEffect(() => {\r\n    const stored = JSON.parse(localStorage.getItem('customTemplates') || '[]');\r\n    setCustomTemplates(stored);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Load personalization settings\r\n    const saved = JSON.parse(localStorage.getItem('userSettings') || '{}');\r\n    if (saved.defaultTone) setTone(saved.defaultTone);\r\n    if (saved.defaultAudience) setAudience(saved.defaultAudience);\r\n    if (saved.branding) setBranding(saved.branding);\r\n  }, []);\r\n\r\n  const applyTemplate = (id: string) => {\r\n    const tpl = customTemplates.find((t) => t.id.toString() === id);\r\n    if (tpl) {\r\n      setKeyword(tpl.prompt);\r\n    }\r\n  };\r\n\r\n  const generateContent = () => {\r\n    if (!keyword) {\r\n      showToast('Please enter a keyword.', 'error');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    // Simulate AI content generation API call\r\n    setTimeout(() => {\r\n      let generatedText = `## Unlocking the Power of ${keyword}\\n\\nThis is an AI-generated article about **${keyword}**, tailored for a **${audience}** audience with a **${tone}** tone. This content is structured as a **${contentType}**.\\n\\n### Key Benefits\\n\\nExploring the advantages of ${keyword} reveals several key points. Firstly, it enhances productivity. Secondly, it provides deep market insights.\\n\\n### Implementation Strategy\\n\\nA successful strategy involves careful planning and execution. Start by defining your goals, then move to resource allocation.`;\r\n      if (branding) {\r\n        generatedText += `\\n\\n---\\n*Content generated for: ${branding}*`;\r\n      }\r\n      setContent(generatedText);\r\n      setIsLoading(false);\r\n      showToast('Content generated successfully!', 'success');\r\n    }, 1500);\r\n  };\r\n\r\n  const saveContent = () => {\r\n    if (!content) {\r\n      showToast('No content to save!', 'info');\r\n      return;\r\n    }\r\n    const history = JSON.parse(localStorage.getItem('generatedContentHistory') || '[]');\r\n    const newEntry = {\r\n      id: Date.now(),\r\n      keyword: keyword || 'Untitled',\r\n      content: content,\r\n      date: new Date().toISOString(),\r\n    };\r\n    localStorage.setItem('generatedContentHistory', JSON.stringify([newEntry, ...history]));\r\n    showToast('Content saved to history!', 'success');\r\n  };\r\n\r\n  const checkPlagiarism = () => {\r\n    if (!content) return;\r\n    setPlagiarismStatus('checking');\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      // For demo: 80% chance unique, 20% chance plagiarized\r\n      const isUnique = Math.random() > 0.2;\r\n      setPlagiarismStatus(isUnique ? 'unique' : 'plagiarized');\r\n    }, 1200);\r\n  };\r\n\r\n  const copyToClipboard = async () => {\r\n    if (content) {\r\n      await navigator.clipboard.writeText(content);\r\n      showToast('Copied to clipboard!', 'success');\r\n    }\r\n  };\r\n\r\n  const downloadTxt = () => {\r\n    if (!content) return;\r\n    const blob = new Blob([content], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${keyword || 'content'}.txt`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const downloadHtml = () => {\r\n    if (!content) return;\r\n    const html = `<html><body>${content.replace(/\\n/g, '<br/>')}</body></html>`;\r\n    const blob = new Blob([html], { type: 'text/html' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${keyword || 'content'}.html`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-10\">\r\n      <h2 className=\"text-4xl font-bold text-ai-green mb-8 text-center\">Generate New Content</h2>\r\n      <div className=\"max-w-2xl mx-auto bg-gray-800 p-8 rounded-lg shadow-lg\">\r\n        {/* Custom Template Selector */}\r\n        {customTemplates.length > 0 && (\r\n          <div className=\"mb-6\">\r\n            <label htmlFor=\"template\" className=\"block text-gray-300 text-sm font-medium mb-1\">Use a Saved Template</label>\r\n            <div className=\"flex gap-2\">\r\n              <select\r\n                id=\"template\"\r\n                value={selectedTemplateId}\r\n                onChange={e => {\r\n                  setSelectedTemplateId(e.target.value);\r\n                  applyTemplate(e.target.value);\r\n                }}\r\n                className=\"w-full p-3 rounded-md bg-gray-700 text-white border border-gray-600 focus:outline-none focus:border-ai-orange\"\r\n              >\r\n                <option value=\"\">Select a template...</option>\r\n                {customTemplates.map(t => (\r\n                  <option key={t.id} value={t.id}>{t.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"mb-6\">\r\n          <label htmlFor=\"keyword\" className=\"block text-gray-300 text-lg font-medium mb-2\">Enter Keyword:</label>\r\n          <input type=\"text\" id=\"keyword\" className=\"w-full p-3 rounded-md bg-gray-700 text-white border border-gray-600 focus:outline-none focus:border-ai-orange\" onChange={(e) => setKeyword(e.target.value)} value={keyword} />\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n          <div>\r\n            <label htmlFor=\"tone\" className=\"block text-gray-300 text-sm font-medium mb-1\">Tone of Voice</label>\r\n            <select id=\"tone\" value={tone} onChange={(e) => setTone(e.target.value)} className=\"w-full p-3 rounded-md bg-gray-700 text-white border border-gray-600 focus:outline-none focus:border-ai-orange\">\r\n              <option>Professional</option>\r\n              <option>Casual</option>\r\n              <option>Witty</option>\r\n              <option>Persuasive</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"audience\" className=\"block text-gray-300 text-sm font-medium mb-1\">Target Audience</label>\r\n            <select id=\"audience\" value={audience} onChange={(e) => setAudience(e.target.value)} className=\"w-full p-3 rounded-md bg-gray-700 text-white border border-gray-600 focus:outline-none focus:border-ai-orange\">\r\n              <option>General</option>\r\n              <option>Beginners</option>\r\n              <option>Experts</option>\r\n              <option>Developers</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"contentType\" className=\"block text-gray-300 text-sm font-medium mb-1\">Content Type</label>\r\n            <select id=\"contentType\" value={contentType} onChange={(e) => setContentType(e.target.value)} className=\"w-full p-3 rounded-md bg-gray-700 text-white border border-gray-600 focus:outline-none focus:border-ai-orange\">\r\n              <option value=\"BlogPost\">Blog Post</option>\r\n              <option value=\"LandingPage\">Landing Page</option>\r\n              <option value=\"ProductDescription\">Product Description</option>\r\n              <option value=\"SocialMediaPost\">Social Media Post</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex space-x-4 mb-6\">\r\n          <button\r\n            onClick={generateContent}\r\n            disabled={isLoading || !keyword}\r\n            className=\"flex-1 bg-ai-orange text-white py-3 rounded-md text-lg font-semibold hover:bg-ai-red transition-colors disabled:bg-gray-500 disabled:cursor-not-allowed flex items-center justify-center\"\r\n          >\r\n            {isLoading ? <LoadingSpinner /> : 'Generate'}\r\n          </button>\r\n          <button\r\n            onClick={saveContent}\r\n            disabled={!content}\r\n            className=\"flex-1 bg-ai-green text-white py-3 rounded-md text-lg font-semibold hover:bg-green-700 transition-colors disabled:bg-gray-500 disabled:cursor-not-allowed\"\r\n          >\r\n            Save to History\r\n          </button>\r\n        </div>\r\n        <div ref={contentRef}>\r\n          <ContentDisplay content={content} isLoading={isLoading} />\r\n        </div>\r\n        {/* Export Options */}\r\n        {content && !isLoading && (\r\n          <div className=\"mt-4 flex flex-wrap gap-4\">\r\n            <button onClick={copyToClipboard} className=\"bg-ai-green text-white px-4 py-2 rounded hover:bg-green-700 font-semibold transition-colors\">Copy to Clipboard</button>\r\n            <button onClick={downloadTxt} className=\"bg-ai-orange text-white px-4 py-2 rounded hover:bg-ai-red font-semibold transition-colors\">Download as TXT</button>\r\n            <button onClick={downloadHtml} className=\"bg-ai-orange text-white px-4 py-2 rounded hover:bg-ai-red font-semibold transition-colors\">Download as HTML</button>\r\n          </div>\r\n        )}\r\n        {/* SEO Score Panel */}\r\n        {content && (\r\n          <>\r\n            <div className=\"mt-8 bg-gray-900 border border-ai-green rounded-lg p-6\">\r\n              <h3 className=\"text-lg font-bold text-ai-green mb-2 flex items-center gap-2\">\r\n                SEO Score:\r\n                <span className={seoScore > 80 ? 'text-green-400' : seoScore > 50 ? 'text-yellow-400' : 'text-red-400'}>\r\n                  {seoScore}/100\r\n                </span>\r\n              </h3>\r\n              <SeoScoreBar score={seoScore} />\r\n              <ul className=\"list-disc list-inside text-gray-300 space-y-1\">\r\n                {seoSuggestions.length === 0 ? (\r\n                  <li>Great job! Your content is well-optimized for SEO.</li>\r\n                ) : (\r\n                  seoSuggestions.map((s, i) => <li key={i}>{s}</li>)\r\n                )}\r\n              </ul>\r\n              <div className=\"mt-4 text-xs text-gray-500\">\r\n                <span>Tips: Use your main keyword in the title, headings, and throughout the content. Aim for clarity and readability.</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-6 flex flex-col items-center\">\r\n              <button\r\n                onClick={checkPlagiarism}\r\n                disabled={plagiarismStatus === 'checking'}\r\n                className=\"bg-ai-orange text-white px-6 py-2 rounded-md font-semibold hover:bg-ai-red transition-colors disabled:bg-gray-500 disabled:cursor-not-allowed\"\r\n              >\r\n                {plagiarismStatus === 'checking' ? 'Checking Plagiarism...' : 'Check Plagiarism'}\r\n              </button>\r\n              {plagiarismStatus === 'unique' && (\r\n                <div className=\"mt-4 text-green-400 font-bold\">No plagiarism detected. Your content is unique!</div>\r\n              )}\r\n              {plagiarismStatus === 'plagiarized' && (\r\n                <div className=\"mt-4 text-red-400 font-bold\">Potential duplicate content found. Please revise your text.</div>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}