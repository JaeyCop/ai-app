{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspace/ai-app/components/ui/Toast.tsx"],"sourcesContent":["'use client';\nimport { CheckCircle, XCircle, Info, X } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\ntype ToastProps = {\n  message: string;\n  type: 'success' | 'error' | 'info';\n  onClose: () => void;\n};\n\nconst icons = {\n  success: <CheckCircle className=\"text-green-500\" />,\n  error: <XCircle className=\"text-red-500\" />,\n  info: <Info className=\"text-blue-500\" />,\n};\n\nconst Toast = ({ message, type, onClose }: ToastProps) => {\n  return (\n    <motion.div\n      layout\n      initial={{ opacity: 0, y: 50, scale: 0.3 }}\n      animate={{ opacity: 1, y: 0, scale: 1 }}\n      exit={{ opacity: 0, scale: 0.5, transition: { duration: 0.2 } }}\n      className=\"max-w-sm w-full bg-slate-800 shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden border border-slate-700\"\n    >\n      <div className=\"p-4\">\n        <div className=\"flex items-start\">\n          <div className=\"flex-shrink-0\">{icons[type]}</div>\n          <div className=\"ml-3 w-0 flex-1 pt-0.5\">\n            <p className=\"text-sm font-medium text-white\">{message}</p>\n          </div>\n          <div className=\"ml-4 flex-shrink-0 flex\">\n            <button\n              onClick={onClose}\n              className=\"inline-flex text-gray-400 hover:text-gray-200 focus:outline-none\"\n            >\n              <span className=\"sr-only\">Close</span>\n              <X className=\"h-5 w-5\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Toast;"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AAAA;AACA;AAFA;;;;AAUA,MAAM,QAAQ;IACZ,uBAAS,6LAAC,8NAAA,CAAA,cAAW;QAAC,WAAU;;;;;;IAChC,qBAAO,6LAAC,+MAAA,CAAA,UAAO;QAAC,WAAU;;;;;;IAC1B,oBAAM,6LAAC,qMAAA,CAAA,OAAI;QAAC,WAAU;;;;;;AACxB;AAEA,MAAM,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAc;IACnD,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;QACT,MAAM;QACN,SAAS;YAAE,SAAS;YAAG,GAAG;YAAI,OAAO;QAAI;QACzC,SAAS;YAAE,SAAS;YAAG,GAAG;YAAG,OAAO;QAAE;QACtC,MAAM;YAAE,SAAS;YAAG,OAAO;YAAK,YAAY;gBAAE,UAAU;YAAI;QAAE;QAC9D,WAAU;kBAEV,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAAiB,KAAK,CAAC,KAAK;;;;;;kCAC3C,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAE,WAAU;sCAAkC;;;;;;;;;;;kCAEjD,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,SAAS;4BACT,WAAU;;8CAEV,6LAAC;oCAAK,WAAU;8CAAU;;;;;;8CAC1B,6LAAC,+LAAA,CAAA,IAAC;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO3B;KA5BM;uCA8BS","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///workspace/ai-app/context/ToastContext.tsx"],"sourcesContent":["'use client';\r\nimport React, { createContext, useContext, useState, useCallback, ReactNode } from 'react';\r\nimport Toast from '@/components/ui/Toast';\r\n\r\ntype ToastMessage = {\r\n  id: number;\r\n  message: string;\r\n  type: 'success' | 'error' | 'info';\r\n};\r\n\r\ntype ToastContextType = {\r\n  addToast: (message: string, type: 'success' | 'error' | 'info') => void;\r\n};\r\n\r\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\r\n\r\nexport const ToastProvider = ({ children }: { children: ReactNode }) => {\r\n  const [toasts, setToasts] = useState<ToastMessage[]>([]);\r\n\r\n  const addToast = useCallback((message: string, type: 'success' | 'error' | 'info' = 'info') => {\r\n    const id = Date.now();\r\n    setToasts((prevToasts) => [...prevToasts, { id, message, type }]);\r\n    setTimeout(() => {\r\n      removeToast(id);\r\n    }, 5000);\r\n  }, []);\r\n\r\n  const removeToast = (id: number) => {\r\n    setToasts((prevToasts) => prevToasts.filter((toast) => toast.id !== id));\r\n  };\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ addToast }}>\r\n      {children}\r\n      <div className=\"fixed top-5 right-5 z-50 space-y-2\">\r\n        {toasts.map((toast) => (\r\n          <Toast key={toast.id} message={toast.message} type={toast.type} onClose={() => removeToast(toast.id)} />\r\n        ))}\r\n      </div>\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useToast = () => {\r\n  const context = useContext(ToastContext);\r\n  if (context === undefined) {\r\n    throw new Error('useToast must be used within a ToastProvider');\r\n  }\r\n  return context;\r\n};"],"names":[],"mappings":";;;;;AACA;AACA;;;AAFA;;;AAcA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAA2B;;IACjE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAEvD,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+CAAE,CAAC,SAAiB,OAAqC,MAAM;YACxF,MAAM,KAAK,KAAK,GAAG;YACnB;uDAAU,CAAC,aAAe;2BAAI;wBAAY;4BAAE;4BAAI;4BAAS;wBAAK;qBAAE;;YAChE;uDAAW;oBACT,YAAY;gBACd;sDAAG;QACL;8CAAG,EAAE;IAEL,MAAM,cAAc,CAAC;QACnB,UAAU,CAAC,aAAe,WAAW,MAAM,CAAC,CAAC,QAAU,MAAM,EAAE,KAAK;IACtE;IAEA,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;QAAS;;YACtC;0BACD,6LAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,sBACX,6LAAC,6HAAA,CAAA,UAAK;wBAAgB,SAAS,MAAM,OAAO;wBAAE,MAAM,MAAM,IAAI;wBAAE,SAAS,IAAM,YAAY,MAAM,EAAE;uBAAvF,MAAM,EAAE;;;;;;;;;;;;;;;;AAK9B;GAzBa;KAAA;AA2BN,MAAM,WAAW;;IACtB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa","debugId":null}}]
}